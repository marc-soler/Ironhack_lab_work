#Creating a bar chart with ggplot
bar_chart <- ggplot(df_used_cars, # data layer
aes(x = Brand, #aesthetics specify the x and y-axis
y = Cars.Listings)) +
geom_bar(stat = "identity", #for a bar chart we need a geom_bar, param identity is to plot the y values (normally geom_bar is for histograms)
width = 0.8, #width of each bar
color = "navy", #border color of the bars
fill = "navy") + #fill color of the bars
ggtitle("Cars Listings by Brand") + #adding a plot title with ggtitle
theme_classic() + #adding a different theme with a clean design
theme(axis.text.x = element_text(angle = 45,  #rotating the x-axis labels
hjust = 1)) +
labs(x = NULL, #removing the x-axis title
y = "Number of Listings") #adding a new y-axis title
# Read the car data csv file for this task.
# Make sure the file is in the same directory, as your main R library, otherwise you'll need to specify the file location.
df_used_cars <- read.csv("../bar_chart_data.csv",
header = TRUE,
sep = ",")
#Creating a bar chart with ggplot
bar_chart <- ggplot(df_used_cars, # data layer
aes(x = Brand, #aesthetics specify the x and y-axis
y = Cars.Listings)) +
geom_bar(stat = "identity", #for a bar chart we need a geom_bar, param identity is to plot the y values (normally geom_bar is for histograms)
width = 0.8, #width of each bar
color = "navy", #border color of the bars
fill = "navy") + #fill color of the bars
ggtitle("Cars Listings by Brand") + #adding a plot title with ggtitle
theme_classic() + #adding a different theme with a clean design
theme(axis.text.x = element_text(angle = 45,  #rotating the x-axis labels
hjust = 1)) +
labs(x = NULL, #removing the x-axis title
y = "Number of Listings") #adding a new y-axis title
library("ggplot2") #library for visualization
#Creating a bar chart with ggplot
bar_chart <- ggplot(df_used_cars, # data layer
aes(x = Brand, #aesthetics specify the x and y-axis
y = Cars.Listings)) +
geom_bar(stat = "identity", #for a bar chart we need a geom_bar, param identity is to plot the y values (normally geom_bar is for histograms)
width = 0.8, #width of each bar
color = "navy", #border color of the bars
fill = "navy") + #fill color of the bars
ggtitle("Cars Listings by Brand") + #adding a plot title with ggtitle
theme_classic() + #adding a different theme with a clean design
theme(axis.text.x = element_text(angle = 45,  #rotating the x-axis labels
hjust = 1)) +
labs(x = NULL, #removing the x-axis title
y = "Number of Listings") #adding a new y-axis title
bar_chart
prestige <- read.table('data.txt', header=TRUE)
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=Prestige)
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mycv
mod.poly3 <- lm(prestige~poly(income,3,raw = TRUE),data=prestige)
summary(mod.poly3)
plot(effects::allEffects(mod.poly3))
anova(mod.poly2,mod.poly3) # There's a reduction in the RSS, but it's non-significant. Therefore, keep the wuadratic one.
car::Anova(mod.poly2,mod.poly3)
mod.int <- update(mod.poly3,.~.+education*women,data=prestige)
summary(mod.int)
anova(mod.int)
# interaction not significant, the rest of predictors are. Ditch it.
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mycv
mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(education), women=mean(women)),interval='confidence')
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mycv
mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
my_pred
#anova(mod.poly2,mod.poly3) # There's a reduction in the RSS, but it's non-significant. Therefore, keep the quadratic one.
car::Anova(mod.poly2,mod.poly3)
car::Anova(mod.poly2)
mod.int <- update(mod.poly3,.~.+education*women,data=prestige)
summary(mod.int)
anova(mod.int)
# interaction not significant, the rest of predictors are. Ditch it.
my_pred2 <- predict(mod.int, newdata=list(income=20837, education=7, women=76),interval='confidence', level=.90)
my_pred3 <- predict(mod.int, newdata=list(income=20837, education=7, women=76),interval='prediction', level=.90)
my_pred2
my_pred3
mod.int <- update(mod.poly3,.~.+education*women,data=prestige)
summary(mod.int)
anova(mod.int)
# interaction not significant, the rest of predictors are. Ditch it.
my_pred3 <- predict(mod.int, newdata=list(income=20837, education=7, women=76),interval='prediction', level=.99)
my_pred3
mod.int3 <- update(mod.poly3,.~.+education*women,data=prestige)
summary(mod.int)
anova(mod.int)
# interaction not significant, the rest of predictors are. Ditch it.
my_pred3 <- predict(mod.int, newdata=list(income=20837, education=7, women=76),interval='prediction', level=.99)
my_pred3
mod.main <- lm(prestige~poly(income,2,raw=TRUE)+education+women,data=prestige)
mod.int2 <- lm(prestige~poly(income,2,raw=TRUE)+education*women,data=prestige)
summary(mod.main)
anova(mod.main)
plot(effects::allEffects(mod.main))
car::Anova(mod.poly2, mod.poly3, mod.main, mod.int2, mod.int3)
mod.main <- lm(prestige~poly(income,2,raw=TRUE)+education+women,data=prestige)
mod.int2 <- lm(prestige~poly(income,2,raw=TRUE)+education*women,data=prestige)
summary(mod.main)
anova(mod.main)
plot(effects::allEffects(mod.main))
car::Anova(mod.poly2, mod.main)
mod.main <- lm(prestige~poly(income,2,raw=TRUE)+education+women,data=prestige)
mod.int2 <- lm(prestige~poly(income,2,raw=TRUE)+education*women,data=prestige)
summary(mod.main)
anova(mod.main)
plot(effects::allEffects(mod.main))
car::Anova(mod.int2, mod.main)
mod.main <- lm(prestige~poly(income,2,raw=TRUE)+education+women,data=prestige)
mod.int2 <- lm(prestige~poly(income,2,raw=TRUE)+education*women,data=prestige)
summary(mod.main)
anova(mod.main)
plot(effects::allEffects(mod.main))
car::Anova(mod.int3, mod.main)
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
confint(mod.poly2, 'poly(income, 2, raw = TRUE)2', level=0.9)
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mycv
mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
my_pred
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
bla <- confint(mod.poly2, 'poly(income, 2, raw = TRUE)2', level=0.9)
bla
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
cv <- function(x){
cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
mycv <- sapply(list(mod.poly2),cv)
mycv
mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
my_pred
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
bla <- confint(mod.poly2, 'poly(income, 2, raw = TRUE)2', level=0.9)
bla
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
#summary(mod.poly2)
#plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
#cv <- function(x){
#cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
#mycv <- sapply(list(mod.poly2),cv)
#mycv
#mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
#my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
#my_pred
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
bla <- confint(mod.poly2, 'poly(income, 2, raw = TRUE)1', level=0.9)
bla
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
#summary(mod.poly2)
#plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
#cv <- function(x){
#cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
#mycv <- sapply(list(mod.poly2),cv)
#mycv
#mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
#my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
#my_pred
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
bla <- confint(mod.poly2, 'poly(income, 2, raw = TRUE)2', level=0.9)
bla
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
#summary(mod.poly2)
#plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
#cv <- function(x){
#cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
#mycv <- sapply(list(mod.poly2),cv)
#mycv
#mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
#my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
#my_pred
mod.poly2 <- lm(prestige~poly(income,2,raw = TRUE),data=prestige)
#bla <- confint(mod.poly2, 'poly(income, 2, raw = TRUE)2', level=0.9)
#bla
# if raw=FALSE, we get orthogonal matrices for the linear and the quadratic term (nice for multicollinearity, if there is some, but it's a problem for interpreting). So, if we want to interpret the model, we use raw=TRUE.
summary(mod.poly2)
plot(effects::allEffects(mod.poly2))
#relation clearly significant, non-linear.
# to center a variable: scale(var, scale=FALSE) if scale=TRUE we standardize it.
#cv <- function(x){
#cv <- round(round(summary(x)$sigma,3)/round(mean(prestige$prestige),3)*100,3)}
#mycv <- sapply(list(mod.poly2),cv)
#mycv
#mod.main <- lm(prestige~poly(income,2,raw = TRUE)+women+education,data=prestige)
#my_pred <- predict(mod.main, newdata=list(income=15241, education=mean(prestige$education), women=mean(prestige$women)),interval='confidence')
#my_pred
library("ggplot2") #library for visualization
# Read the car data csv file for this task.
# Make sure the file is in the same directory, as your main R library, otherwise you'll need to specify the file location.
df_used_cars <- read.csv("../bar_chart_data.csv",
header = TRUE,
sep = ",")
#Creating a bar chart with ggplot
bar_chart <- ggplot(df_used_cars, # data layer
aes(x = Brand, #aesthetics specify the x and y-axis
y = Cars.Listings)) +
geom_bar(stat = "identity", #for a bar chart we need a geom_bar, param identity is to plot the y values (normally geom_bar is for histograms)
width = 0.8, #width of each bar
color = "navy", #border color of the bars
fill = "navy") + #fill color of the bars
ggtitle("Cars Listings by Brand") + #adding a plot title with ggtitle
theme_classic() + #adding a different theme with a clean design
theme(axis.text.x = element_text(angle = 45,  #rotating the x-axis labels
hjust = 1)) +
labs(x = NULL, #removing the x-axis title
y = "Number of Listings") #adding a new y-axis title
bar_chart
